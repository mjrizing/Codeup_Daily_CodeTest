[1023번]
실수 1개를 입력받아 정수 부분과 실수 부분으로 나누어 출력한다.

** 여러 가지 방법들로 해결할 수 있다.

만약 실수 부분이 0으로 시작하지 않는다면(예를 들어 1.000009)
scanf("%d.%d", &a, &b)도 하나의 방법이 될 수 있다.
입력 예시 1.414213 
출력 예시 1 414213


[답]
#include <stdio.h>

int main() {
    int a,b;
    scanf("%d.%d", &a, &b);
    printf("%d\n%d", a, b);
    
    

    return 0;
}


-------------------------------------------------------------------------------------
[1024번]
단어를 1개 입력받는다.

입력받은 단어(영어)의 각 문자를

한줄에 한 문자씩 분리해 출력한다.


참고
C언어에서는 문장을 저장하기 위해 특별한 방법을 사용하지 않고,
배열이라는 연속된 공간에 문자들을 연속으로 한 개씩 저장하는 방법을 사용한다.
단, 문자열(문자가 연속적으로 연결된 줄이라는 의미. 즉 문장)의 마지막임을 나타내기 위해
문자열의 마지막에 널(NULL) 문자라는 특별한 의미를 가지는 문자를 삽입해 문장임을 나타낸다.

널(NULL)은 영어 단어 자체의 의미로는, 아무런 가치가 없는 또는 아무것도 없는, 사용되지 않은 등의 의미를 가지는데,

문자로는 '\0', 아스키문자의 정수값은 0을 의미하며 NULL 로도 사용할 수 있다.

단어나 문장을 scanf("%s", ...); 로 입력받게 되면, 그 마지막에 널문자가 자동으로 입력되는 것이다.

그러므로, 본 문제는 그렇게 저장되어있는 영문자들을 한 개씩 순차적으로 검사해서,

문장의 마지막을 나타내는 널문자가 나올 때까지 모양을 만들어 출력하면 되는 것이다.

나중에 조건실행문, 반복문, 배열에 대해서 배우면 명확히 이해할 수 있게 된다.

printf("%s", ...); 는 결국, 저장되어있는 문자의 마지막까지, 즉 널문자가 나올 때까지 형식에 맞추어 출력해 주라는 의미를 가진다.


예시
char d[30]; //최대 30문자를 저장할 수 있는 저장 공간 준비. 마지막에 널문자 고려해야함
scanf("%s", d); //그 공간에 키보드로 입력된 내용을 저장. 단 공백이 있으면 거기까지만 입력됨.
for(i=0; d[i]!='\0'; i++) //저장된 내용을 하나하나씩 검사해서 널문자가 아닐 동안 아래 실행
{
   printf("\'%c\'", d[i]);
}


입력
단어(영어) 하나를 입력받는다.
(단, 단어의 길이는 20자 이하이다.)


출력
단어의 문자(영어)를 하나씩 나누어 한 줄에 한 개씩
' '로 묶어서 출력한다.


입력 예시   
Boy

출력 예시
'B'
'o'
'y'

[답]
#include <stdio.h>

  int main() {
  int i;                                 //for문 사용에 필요한 정수 i 선언
  char n[21];                            //단어의 길이가 20자 이하인 배열 n 선언
  scanf("%s", n);                        //입력, n
  for(i=0; n[i]!='\0'; i++){             //for반복문 사용 i=초기화; n[i]='\0' 배열의 i번째값이 null이 아닐때 i값을 1씩증가 
    printf("\'%c\'\n", n[i]);
  }
}




-------------------------------------------------------------------------------------
[1025번]
다섯 자리의 정수 1개를 입력받아 각 자리별로 나누어 출력한다.

참고
scanf("%1d%1d%1d%1d%1d", &a, &b, &c, &d, &e);
를 사용하면 1개의 숫자로 각각 구분되어 저장된다.

예시
읽어들인 값을 적당히 바꿔 출력하기 위해서

printf("[%d]", a*10000);

과 같은 방법도 가능하다.


입력
다섯 자리로 이루어진 1개의 정수를 입력받는다.
(단, 10,000 <= 입력받는 수 <= 99,999 )


출력
각 자리의 숫자를 분리해 한 줄에 하나씩 [ ]속에 넣어 출력한다.


입력 예시   
75254

출력 예시
[70000]
[5000]
[200]
[50]
[4]

[답]
#include <stdio.h>
int main() {
  int a,b,c,d,e;
  scanf("%1d%1d%1d%1d%1d", &a, &b, &c, &d, &e);
  printf("[%d]\n", a*10000);
  printf("[%d]\n", b*1000);
  printf("[%d]\n", c*100);
  printf("[%d]\n", d*10);
  printf("[%d]\n", e*1);

}








